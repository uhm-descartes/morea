# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Workflow to register the DESCARTES Course with the UMH DESCARTES Course Sites page.
name: Register Descartes Course Site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pull-requests: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "descartes"
  cancel-in-progress: false

jobs:
  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get Deployment URL
        id: deployment
        uses: actions/configure-pages@v4

      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: current-repo
      
      - name: Checkout Descartes Course repository
        uses: actions/checkout@v4
        with:
          repository: uhm-descartes/descartes-modules
          path: descartes-modules
          token: ${{ secrets.DESCARTES_TOKEN }}

      - name: Update CSV and Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.DESCARTES_TOKEN }}
          COURSE_URL: ${{ steps.deployment.outputs.page_url }}
          COURSE_REPOSITORY: ${{ github.repository }}
          DESCARTES_COURSES_DIR: "descartes-modules"
          DESCARTES_COURSES_CSV: "course-sites/descartes-courses.csv"
        run: |
          echo "Extract course name, course full name, description, and prerequisites from _config.yml"
          if [ -f "current-repo/_config.yml" ]; then
            COURSE_NAME=$(grep "^morea_course:" current-repo/_config.yml | sed 's/morea_course: *//' | tr -d '"' | tr '[:lower:]' '[:upper:]')
            echo "Found course name: $COURSE_NAME"
            COURSE_FULL_NAME=$(grep "^morea_course_name:" current-repo/_config.yml | sed 's/morea_course_name: *//' | tr -d '"')
            echo "Found course full name: $COURSE_FULL_NAME"
            COURSE_DESCRIPTION=$(grep "^morea_description:" current-repo/_config.yml | sed 's/morea_description: *//' | tr -d '"')
            echo "Found course description: $COURSE_DESCRIPTION"
            COURSE_PREREQUISITES=$(grep "^morea_prerequisites:" current-repo/_config.yml | sed 's/morea_prerequisites: *//' | tr -d '"')
            echo "Found course prerequisites: $COURSE_PREREQUISITES"
          else
            echo "ERROR: _config.yml not found!"
            exit 11
          fi

          if [ -z "$COURSE_URL" ]; then
            echo "Pages deployment not configured"
            exit 1
          fi
          if [ -z "$COURSE_NAME" ]; then
            echo "No MOREA Course Name defined in _config.yaml"
            exit 1
          fi

          cd $DESCARTES_COURSES_DIR
          
          echo "Configure git"
          git config --local user.name "UHM DESCARTES Action Bot"
          git config --local user.email "uhmnrt@hawaii.edu"
          git config --local user.password "$GH_TOKEN"
          
          echo "Check if the exact entry already exists (with full name and description)"
          EXPECTED_ENTRY="\"$COURSE_NAME\",\"$COURSE_URL\",\"$COURSE_FULL_NAME\",\"$COURSE_DESCRIPTION\",\"$COURSE_PREREQUISITES\",\"$COURSE_REPOSITORY\""
          if grep -Fxq "$EXPECTED_ENTRY" "$DESCARTES_COURSES_CSV"; then
            echo "Entry '$EXPECTED_ENTRY' already exists in CSV file. Skipping update."
            exit 0
          fi
          
          echo "Check if an entry with same course name and URL exists (but potentially different full name or description or prerequisites or repository)"
          PARTIAL_ENTRY="$COURSE_NAME,$COURSE_URL"
          if grep -q "^$PARTIAL_ENTRY," "$DESCARTES_COURSES_CSV"; then
            echo "Found entry with same course and URL but different full name/description/prerequisites/repository. Will update entry."
            NEEDS_UPDATE=true
          elif grep -q "^$COURSE_NAME," "$DESCARTES_COURSES_CSV"; then
            echo "Found entry with same course name but different URL/full name/description/prerequisites/repository. Will update entry."
            NEEDS_UPDATE=true
          else
            echo "No existing entry found. Will add new entry."
            NEEDS_UPDATE=true
          fi
          
          echo "Create a new branch"
          BRANCH_NAME="update-${COURSE_NAME// /}-$(date +%s)"
          git checkout -b "$BRANCH_NAME"
          
          if grep -q "^$COURSE_NAME," "$DESCARTES_COURSES_CSV"; then
            echo "Update existing entry with full name and description"
            sed -i.bak "s|^$COURSE_NAME,.*|$EXPECTED_ENTRY|g" "$DESCARTES_COURSES_CSV"
            echo "Updated existing $COURSE_NAME entry with: $COURSE_URL, full name: $COURSE_FULL_NAME, and description: $COURSE_DESCRIPTION"
          else
            echo "Append new entry with full name and description"
            echo -e "\n$EXPECTED_ENTRY" >> "$DESCARTES_COURSES_CSV"
            sed -i '/^\s*$/d' "$DESCARTES_COURSES_CSV"
            echo "Added new $COURSE_NAME entry with: $COURSE_URL, full name: $COURSE_FULL_NAME, and description: $COURSE_DESCRIPTION"
          fi
          
          echo "Check if there are changes"
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          echo "Commit and push changes"
          git add "$DESCARTES_COURSES_CSV"
          git commit -m "Update $COURSE_NAME deploy URL, full name, and description"
          git push origin "$BRANCH_NAME"
          
          echo "Create pull request using GitHub CLI"
          gh pr create \
            --title "Update $COURSE_NAME deploy URL, full name, and description" \
            --body "Automatically generated PR to update $COURSE_NAME course site URL to: $COURSE_URL with full name: $COURSE_FULL_NAME and description: $COURSE_DESCRIPTION" \
            --head "$BRANCH_NAME" \
            --base main
